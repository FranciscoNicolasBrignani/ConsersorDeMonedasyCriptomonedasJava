/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package igu;

import javax.swing.JOptionPane;

/**
 *
 * @author fran2
 */
public class Conversor extends javax.swing.JFrame {   
    
    Double conversion;
    int monedapais;
    int monedaconvertir;
    public Conversor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        opcionmonedapais = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        opcionMonedaconvertir = new javax.swing.JComboBox<>();
        btnconvertir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        monto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        igual = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Conversor de monedas y criptomonedas");

        jLabel1.setText("Elija la moneda de su pais");

        opcionmonedapais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija su moneda", "Pesos argentinos", "Dólar", "Euros", "Libras Esterlinas", "Yen Japonés", "Won sul-coreano", "Bitcoin", "Ethereum", "Solana" }));
        opcionmonedapais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionmonedapaisActionPerformed(evt);
            }
        });

        jLabel2.setText("Elija la moneda que quiera convertir");

        opcionMonedaconvertir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija la moneda a convertir", "Pesos argentinos", "Dólar", "Euros", "Libras Esterlinas", "Yen Japonés", "Won sul-coreano", "Bitcoin", "Ethereum", "Solana" }));
        opcionMonedaconvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionMonedaconvertirActionPerformed(evt);
            }
        });

        btnconvertir.setText("Convertir");
        btnconvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconvertirActionPerformed(evt);
            }
        });

        jLabel4.setText("Digite el monto a convertir");

        monto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montoActionPerformed(evt);
            }
        });

        jLabel5.setText("Conversion:");

        igual.setEditable(false);
        igual.setColumns(10);
        igual.setRows(1);
        jScrollPane2.setViewportView(igual);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(68, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(76, 76, 76))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(opcionmonedapais, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(opcionMonedaconvertir, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(monto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addComponent(btnconvertir)
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(opcionmonedapais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(opcionMonedaconvertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnconvertir)
                    .addComponent(jLabel4)
                    .addComponent(monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void montoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montoActionPerformed
             
         
    }//GEN-LAST:event_montoActionPerformed

    private void btnconvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconvertirActionPerformed
                
        if(monto.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"Por favor ingrese un monto");
        }else if(!validarNumeros(monto.getText().trim())){
            JOptionPane.showMessageDialog(this,"Solo se aceptan numeros enteros");
        }
                
        conversion = Double.parseDouble(monto.getText());
        monedapais = opcionmonedapais.getSelectedIndex();
        monedaconvertir = opcionMonedaconvertir.getSelectedIndex();
        
        operaciones op = new operaciones();
        
        op.setValor(conversion);
        op.setDivisa1(monedapais);
        op.setDivisafinal(monedaconvertir);
        
        op.convertidor();
        
        igual.setText(" ");
        
        //mostrar la conversion
        igual.append(""+op.convertidor());
        
                          
    }//GEN-LAST:event_btnconvertirActionPerformed

    private void opcionmonedapaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionmonedapaisActionPerformed
               
    }//GEN-LAST:event_opcionmonedapaisActionPerformed

    private void opcionMonedaconvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionMonedaconvertirActionPerformed
              
       
        
    }//GEN-LAST:event_opcionMonedaconvertirActionPerformed

    public static boolean validarNumeros(String datos){
        return datos.matches("[0-9]*");
        }
    
    public class operaciones{
        private double valor,resultado;
        private int divisa1;
        private int divisafinal;

        public double getResultado() {
            return resultado;
        }

        public void setResultado(double resultado) {
            this.resultado = resultado;
        }

        public double getValor() {
            return valor;
        }

        public void setValor(double valor) {
            this.valor = valor;
        }

        public int getDivisa1() {
            return divisa1;
        }

        public void setDivisa1(int divisa1) {
            this.divisa1 = divisa1;
        }

        public int getDivisafinal() {
            return divisafinal;
        }

        public void setDivisafinal(int divisafinal) {
            this.divisafinal = divisafinal;
        }
        
        public operaciones() {
        }
        
        public double convertidor(){
            
            if(monedapais==1 && monedaconvertir==2){
                resultado = conversion * 0.0039;
            }else if(monedapais==1 && monedaconvertir==1){
                resultado=valor;
            }else if(monedapais==1 && monedaconvertir==3){
                resultado = conversion * 0.0036;
            }else if(monedapais==1 && monedaconvertir==4){
                resultado = conversion * 0.0031;
            }else if(monedapais==1 && monedaconvertir==5){
                resultado = conversion * 0.5623783;
            }else if(monedapais==1 && monedaconvertir==6){
                resultado = conversion * 5.13;
            }else if(monedapais==1 && monedaconvertir==7){
                resultado = conversion * 0.0000001276;
            }else if(monedapais==1 && monedaconvertir==8){
                resultado = conversion * 0.0000020;
            }else if(monedapais==1 && monedaconvertir==9){
                resultado = conversion * 0.0002025;
            }else if(monedapais==2 && monedaconvertir==1){ //dolares
                resultado = conversion * 256.59811;
            }else if(monedapais==2 && monedaconvertir==2){
                resultado = valor;
            }else if(monedapais==2 && monedaconvertir==3){
                resultado = conversion * 0.91685138;
            }else if(monedapais==2 && monedaconvertir==4){
                resultado = conversion * 0.78860288;
            }else if(monedapais==2 && monedaconvertir==5){
                resultado = conversion * 144.30521;
            }else if(monedapais==2 && monedaconvertir==6){
                resultado = conversion * 1315.6077;
            }else if(monedapais==2 && monedaconvertir==7){
                resultado = conversion * 0.0000327151;
            }else if(monedapais==2 && monedaconvertir==8){
                resultado = conversion * 0.0005197121;
            }else if(monedapais==2 && monedaconvertir==9){
                resultado = conversion * 0.05147;
            }else if(monedapais==3 && monedaconvertir==1){ //euros
                resultado = conversion * 279.93446;
            }else if(monedapais==3 && monedaconvertir==2){
                resultado = conversion * 1.090965;
            }else if(monedapais==3 && monedaconvertir==3){
                resultado = valor;
            }else if(monedapais==3 && monedaconvertir==4){
                resultado = conversion * 0.86041445;
            }else if(monedapais==3 && monedaconvertir==5){
                resultado = conversion * 157.43058;
            }else if(monedapais==3 && monedaconvertir==6){
                resultado = conversion * 1435.4732;
            }else if(monedapais==3 && monedaconvertir==7){
                resultado = conversion * 0.00003;
            }else if(monedapais==3 && monedaconvertir==8){
                resultado = conversion * 0.0005;
            }else if(monedapais==3 && monedaconvertir==9){
                resultado = conversion * 0.06826;
            }else if(monedapais==4 && monedaconvertir==1){ //Libras Esterlinas
                resultado = conversion * 325.56659;
            }else if(monedapais==4 && monedaconvertir==2){
                resultado = conversion * 1.2688181;
            }else if(monedapais==4 && monedaconvertir==3){
                resultado = conversion * 1.1630162;
            }else if(monedapais==4 && monedaconvertir==4){
                resultado = valor;
            }else if(monedapais==4 && monedaconvertir==5){
                resultado = conversion * 183.09435;
            }else if(monedapais==4 && monedaconvertir==6){
                resultado = conversion * 1669.6317;
            }else if(monedapais==4 && monedaconvertir==7){
                resultado = conversion * 0.00004150024788;
            }else if(monedapais==4 && monedaconvertir==8){
                resultado = conversion * 0.00066014574407;
            }else if(monedapais==4 && monedaconvertir==9){
                resultado = conversion * 0.069;
            }else if(monedapais==5 && monedaconvertir==1){ //Yen Japonés
                resultado = conversion * 1.7778083;
            }else if(monedapais==5 && monedaconvertir==2){
                resultado = conversion * 0.0069286351;
            }else if(monedapais==5 && monedaconvertir==3){
                resultado = conversion * 0.0063528779;
            }else if(monedapais==5 && monedaconvertir==4){
                resultado = conversion * 0.0054624156;
            }else if(monedapais==5 && monedaconvertir==5){
                resultado = valor;
            }else if(monedapais==5 && monedaconvertir==6){
                resultado = conversion * 9.1178557;
            }else if(monedapais==5 && monedaconvertir==7){
                resultado = conversion * 0.000000226532416;
            }else if(monedapais==5 && monedaconvertir==8){
                resultado = conversion * 0.000003588044937;
            }else if(monedapais==5 && monedaconvertir==9){
                resultado = conversion * 0.000376;
            }else if(monedapais==6 && monedaconvertir==1){ //Won sul-coreano
                resultado = conversion * 0.19498096;
            }else if(monedapais==6 && monedaconvertir==2){
                resultado = conversion * 0.00075989742;
            }else if(monedapais==6 && monedaconvertir==3){
                resultado = conversion * 0.00069675131;
            }else if(monedapais==6 && monedaconvertir==4){
                resultado = conversion * 0.00059908993;
            }else if(monedapais==6 && monedaconvertir==5){
                resultado = conversion * 0.10967491;
            }else if(monedapais==6 && monedaconvertir==6){
                resultado = valor;
            }else if(monedapais==6 && monedaconvertir==7){
                resultado = conversion * 0.000000024875166;
            }else if(monedapais==6 && monedaconvertir==8){
                resultado = conversion * 0.000000395919628;
            }else if(monedapais==6 && monedaconvertir==9){
                resultado = conversion * 0.0000412;
            }else if(monedapais==7 && monedaconvertir==1){ //Bitcoin
                resultado = conversion * 7837311.25;
            }else if(monedapais==7 && monedaconvertir==2){
                resultado = conversion * 30617.31;
            }else if(monedapais==7 && monedaconvertir==3){
                resultado = conversion * 27997.226;
            }else if(monedapais==7 && monedaconvertir==4){
                resultado = conversion * 24067.931;
            }else if(monedapais==7 && monedaconvertir==5){
                resultado = conversion * 4407917.9;
            }else if(monedapais==7 && monedaconvertir==6){
                resultado = conversion * 40197597;
            }else if(monedapais==7 && monedaconvertir==7){
                resultado = valor;
            }else if(monedapais==7 && monedaconvertir==8){
                resultado = conversion * 15.912018229246213;
            }else if(monedapais==7 && monedaconvertir==9){
                resultado = conversion * 1658.27;
            }else if(monedapais==8 && monedaconvertir==1){ //Ethereum
                resultado = conversion * 492700.91;
            }else if(monedapais==8 && monedaconvertir==2){
                resultado = conversion * 1920.2077;
            }else if(monedapais==8 && monedaconvertir==3){
                resultado = conversion * 1762.0221;
            }else if(monedapais==8 && monedaconvertir==4){
                resultado = conversion * 1514.7134;
            }else if(monedapais==8 && monedaconvertir==5){
                resultado = conversion * 277152.63;
            }else if(monedapais==8 && monedaconvertir==6){
                resultado = conversion * 2527351.8;
            }else if(monedapais==8 && monedaconvertir==7){
                resultado = conversion * 0.062860317214569;
            }else if(monedapais==8 && monedaconvertir==8){
                resultado = valor;
            }else if(monedapais==8 && monedaconvertir==9){
                resultado = conversion * 104.41;
            }else if(monedapais==8 && monedaconvertir==1){ //Solana
                resultado = conversion * 4720.22;
            }else if(monedapais==8 && monedaconvertir==2){
                resultado = conversion * 18.40;
            }else if(monedapais==8 && monedaconvertir==3){
                resultado = conversion * 16.86;
            }else if(monedapais==8 && monedaconvertir==4){
                resultado = conversion * 14.49;
            }else if(monedapais==8 && monedaconvertir==5){
                resultado = conversion * 2654.10;
            }else if(monedapais==8 && monedaconvertir==6){
                resultado = conversion * 24218.27;
            }else if(monedapais==8 && monedaconvertir==7){
                resultado = conversion * 0.000601;
            }else if(monedapais==8 && monedaconvertir==8){
                resultado = conversion * 0.00956;
            }else if(monedapais==8 && monedaconvertir==9){
                resultado = valor;
            }
            
            return resultado;
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconvertir;
    private javax.swing.JTextArea igual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField monto;
    private javax.swing.JComboBox<String> opcionMonedaconvertir;
    private javax.swing.JComboBox<String> opcionmonedapais;
    // End of variables declaration//GEN-END:variables

    private String getText(int num1) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
